# 🔗 SQL Joins with BigQuery – Employee & Department Data

This document demonstrates the use of SQL join types—**INNER**, **LEFT**, **RIGHT**, and **FULL OUTER**—on a dataset stored in **Google BigQuery**. It focuses on joining employee records with department data.

These examples are based on the dataset hosted in:

```
bold-artifact-458415-p5.employee_data
```

---

## 📊 Dataset Structure

### `employees` Table

| Column          | Type   |
| --------------- | ------ |
| `name`          | STRING |
| `role`          | STRING |
| `department_id` | STRING |

### `departments` Table

| Column          | Type   |
| --------------- | ------ |
| `department_id` | STRING |
| `name`          | STRING |

---

## 🧪 Join Types & Examples

### 1. LEFT JOIN – All Employees, with Department Info if Available

```sql
SELECT
  employees.name AS employee_name,
  employees.role AS employee_role,
  departments.name AS department_name
FROM
  `bold-artifact-458415-p5.employee_data.employees` AS employees
LEFT JOIN 
  `bold-artifact-458415-p5.employee_data.departments` AS departments
ON employees.department_id = departments.department_id;
```

🔍 *Returns all employees regardless of whether they have a matching department.*

---

### 2. INNER JOIN – Only Employees with Departments

```sql
SELECT
  employees.name AS employee_name,
  employees.role AS employee_role,
  departments.name AS department_name
FROM
  `bold-artifact-458415-p5.employee_data.employees` AS employees
INNER JOIN 
  `bold-artifact-458415-p5.employee_data.departments` AS departments
ON employees.department_id = departments.department_id;
```

🔍 *Returns only employees who are assigned to a department.*

---

### 3. RIGHT JOIN – All Departments, with Assigned Employees

```sql
SELECT
  employees.name AS employee_name,
  employees.role AS employee_role,
  departments.name AS department_name
FROM
  `bold-artifact-458415-p5.employee_data.employees` AS employees
RIGHT JOIN 
  `bold-artifact-458415-p5.employee_data.departments` AS departments
ON employees.department_id = departments.department_id;
```

🔍 *Returns all departments, even if no employee is assigned.*

---

### 4. FULL OUTER JOIN – All Employees and Departments

```sql
SELECT
  employees.name AS employee_name,
  employees.role AS employee_role,
  departments.name AS department_name
FROM
  `bold-artifact-458415-p5.employee_data.employees` AS employees
FULL OUTER JOIN 
  `bold-artifact-458415-p5.employee_data.departments` AS departments
ON employees.department_id = departments.department_id;
```

🔍 *Returns all employees and all departments, even if there is no match between them.*
